@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

/*************************************************

  Elements.scss is used to define
  standard behavior without classes.
  
  Eg. 

  input[type=number]::-webkit-inner-spin-button, 
  input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none; 
  }

**************************************************/
/****************************************

  Atoms of our interfaces serve as 
  the foundational building blocks that
  comprise all our user interfaces.

*****************************************/
/*
*   <a class="a-link">A link</a>
*
*   .a-link {
*     text-decoration: none;
*   }
*/
.a-button {
  height: 5em;
  width: 5em;
  border: none;
  border-radius: 1000px;
  margin: auto;
  background: yellow;
  outline: none;
  cursor: pointer;
  -webkit-box-shadow: 0.5px 0.5px 8px 1px lightgrey;
          box-shadow: 0.5px 0.5px 8px 1px lightgrey; }

.a-input {
  margin: 0;
  padding: 1em;
  border-radius: 50px;
  border: 1px solid black;
  outline: none; }

/*************************************************

  Molecules are relatively simple groups of UI
  elements functioning together as a unit.

*************************************************/
/*  EXAMPLE:
*   
*   <button class="m-button">
*     <p class="a-paragraph-button">Button text</p>
*   </button>
*
*   .m-button {  
*     padding: 1em;     
*   }
*/
/*************************************************

  Organisms are relatively complex UI components 
  composed of groups of molecules and/or 
  atoms and/or other organisms.

**************************************************/
/*
*   EXAMPLE
*
*   <div class="o-cta-block">
*      <h1 class="a-main-header">Header</h1>
*      <p class="a-paragraph-lead">Lead Text</p>
*      <button class="m-button">
*         <p class="a-paragraph-button">Button text</p>  
*      </button>
*   </div>
*
*   .o-cta-block {
*     display: flex;
*     justify-content: center;
*     background: blue;
*   }  
*/
/*************************************************

  Templates are page-level objects that place 
  components into a layout and articulate 
  the designâ€™s underlying content structure.

*************************************************/
/*
*   <main class="t-main">
*     <h1 class="a-main-header">Header</h1>
*     <div class="o-rte-block">
*       <p class="a-paragraph>This is a paragraph</p>
*       <p class="a-paragraph>This is another paragraph</p>
*     </div>
*   </main>
*   
*   .t-main {
*     text-align: center;
*   }  
*/
/*************************************************

  Pages are specifc instances of templates 
  that show what a UI looks like with real 
  representative content in place.

*************************************************/
/*
*   <main class="t-main p-main">
*     <h1 class="a-main-header">Header</h1>
*     <div class="o-rte-block">
*       <p class="a-paragraph>This is a paragraph</p>
*       <p class="a-paragraph>This is another paragraph</p>
*     </div>
*   </main>
*   
*   .p-main {
*     background-color: blue;
*   }  
*/
/*************************************************

  Utils are helper classes that defines a
  specific behavior.
  Utils can be used in atoms, molecules, organisms,
  template & pages

*************************************************/
/*
*   EXAMPLE
* 
*  <div class="o-cta-block u-grid u-grid--center">
*   <h1 class="a-main-header">Header</h1>
*   <p class="a-paragraph-lead">Lead Text</p>
*   <button class="m-button">
*     <p class="a-paragraph-button">Button text</p>
*   </button>
*  </div>
*
* .u-grid {
*   display: flex;
*
*   &--center {
*     justify-content: center;
*     align-items: center;
*   }
* }
*/
.atomic-block {
  border: 1px solid black;
  padding: 1em; }

.atomic-block h1 {
  padding: .5em 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIjAwLWJhc2UvX2Jhc2Uuc2NzcyIsIjAwLWJhc2UvX3ZhcnMuc2NzcyIsIjAwLWJhc2UvX2Z1bmN0aW9ucy5zY3NzIiwiMDAtYmFzZS9fbWl4aW5zLnNjc3MiLCIwMC1iYXNlL19nZW5lcmFsLnNjc3MiLCIwMC1iYXNlL19lbGVtZW50cy5zY3NzIiwiMDEtYXRvbXMvX2F0b21zLnNjc3MiLCIwMS1hdG9tcy9idXR0b24uc2NzcyIsIjAxLWF0b21zL2lucHV0LnNjc3MiLCIwMi1tb2xlY3VsZXMvX21vbGVjdWxlcy5zY3NzIiwiMDMtb3JnYW5pc21zL19vcmdhbmlzbXMuc2NzcyIsIjA0LXRlbXBsYXRlcy9fdGVtcGxhdGVzLnNjc3MiLCIwNS1wYWdlcy9fcGFnZXMuc2NzcyIsIjk5LXV0aWxzL191dGlscy5zY3NzIiwiOTktdXRpbHMvYXRvbWljLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIjAwLWJhc2UvYmFzZVwiO1xuQGltcG9ydCBcIjAxLWF0b21zL2F0b21zXCI7XG5AaW1wb3J0IFwiMDItbW9sZWN1bGVzL21vbGVjdWxlc1wiO1xuQGltcG9ydCBcIjAzLW9yZ2FuaXNtcy9vcmdhbmlzbXNcIjtcbkBpbXBvcnQgXCIwNC10ZW1wbGF0ZXMvdGVtcGxhdGVzXCI7XG5AaW1wb3J0IFwiMDUtcGFnZXMvcGFnZXNcIjtcbkBpbXBvcnQgXCI5OS11dGlscy91dGlsc1wiO1xuIiwiQGltcG9ydCBcInZhcnNcIjtcbkBpbXBvcnQgXCJmdW5jdGlvbnNcIjtcbkBpbXBvcnQgXCJtaXhpbnNcIjtcbkBpbXBvcnQgXCJnZW5lcmFsXCI7XG5AaW1wb3J0IFwiZWxlbWVudHNcIjtcbiIsIiIsIiIsIiIsIioge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4gIEVsZW1lbnRzLnNjc3MgaXMgdXNlZCB0byBkZWZpbmVcbiAgc3RhbmRhcmQgYmVoYXZpb3Igd2l0aG91dCBjbGFzc2VzLlxuICBcbiAgRWcuIFxuXG4gIGlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgXG4gIGlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7IFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgXG4gIH1cblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuICBBdG9tcyBvZiBvdXIgaW50ZXJmYWNlcyBzZXJ2ZSBhcyBcbiAgdGhlIGZvdW5kYXRpb25hbCBidWlsZGluZyBibG9ja3MgdGhhdFxuICBjb21wcmlzZSBhbGwgb3VyIHVzZXIgaW50ZXJmYWNlcy5cblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qXG4qICAgPGEgY2xhc3M9XCJhLWxpbmtcIj5BIGxpbms8L2E+XG4qXG4qICAgLmEtbGluayB7XG4qICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4qICAgfVxuKi9cblxuQGltcG9ydCAnYnV0dG9uJztcbkBpbXBvcnQgJ2lucHV0JzsiLCJcblxuLmEtYnV0dG9uIHtcbiAgaGVpZ2h0OiA1ZW07XG4gIHdpZHRoOiA1ZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMTAwMHB4O1xuICBtYXJnaW46IGF1dG87XG5cbiAgLy8gQ09SUkVDVCBDT0xPUlxuICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gIFxuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIFxuICAvLyBDb3JyZWN0IHNoYWRvdyBjb2xvclxuICBib3gtc2hhZG93OiAwLjVweCAwLjVweCA4cHggMXB4IGxpZ2h0Z3JleTtcbn0iLCJcbi5hLWlucHV0IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAxZW07XG5cbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIG91dGxpbmU6IG5vbmU7XG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuICBNb2xlY3VsZXMgYXJlIHJlbGF0aXZlbHkgc2ltcGxlIGdyb3VwcyBvZiBVSVxuICBlbGVtZW50cyBmdW5jdGlvbmluZyB0b2dldGhlciBhcyBhIHVuaXQuXG5cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuLyogIEVYQU1QTEU6XG4qICAgXG4qICAgPGJ1dHRvbiBjbGFzcz1cIm0tYnV0dG9uXCI+XG4qICAgICA8cCBjbGFzcz1cImEtcGFyYWdyYXBoLWJ1dHRvblwiPkJ1dHRvbiB0ZXh0PC9wPlxuKiAgIDwvYnV0dG9uPlxuKlxuKiAgIC5tLWJ1dHRvbiB7ICBcbiogICAgIHBhZGRpbmc6IDFlbTsgICAgIFxuKiAgIH1cbiovIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuICBPcmdhbmlzbXMgYXJlIHJlbGF0aXZlbHkgY29tcGxleCBVSSBjb21wb25lbnRzIFxuICBjb21wb3NlZCBvZiBncm91cHMgb2YgbW9sZWN1bGVzIGFuZC9vciBcbiAgYXRvbXMgYW5kL29yIG90aGVyIG9yZ2FuaXNtcy5cblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuLypcbiogICBFWEFNUExFXG4qXG4qICAgPGRpdiBjbGFzcz1cIm8tY3RhLWJsb2NrXCI+XG4qICAgICAgPGgxIGNsYXNzPVwiYS1tYWluLWhlYWRlclwiPkhlYWRlcjwvaDE+XG4qICAgICAgPHAgY2xhc3M9XCJhLXBhcmFncmFwaC1sZWFkXCI+TGVhZCBUZXh0PC9wPlxuKiAgICAgIDxidXR0b24gY2xhc3M9XCJtLWJ1dHRvblwiPlxuKiAgICAgICAgIDxwIGNsYXNzPVwiYS1wYXJhZ3JhcGgtYnV0dG9uXCI+QnV0dG9uIHRleHQ8L3A+ICBcbiogICAgICA8L2J1dHRvbj5cbiogICA8L2Rpdj5cbipcbiogICAuby1jdGEtYmxvY2sge1xuKiAgICAgZGlzcGxheTogZmxleDtcbiogICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuKiAgICAgYmFja2dyb3VuZDogYmx1ZTtcbiogICB9ICBcbiovIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuICBUZW1wbGF0ZXMgYXJlIHBhZ2UtbGV2ZWwgb2JqZWN0cyB0aGF0IHBsYWNlIFxuICBjb21wb25lbnRzIGludG8gYSBsYXlvdXQgYW5kIGFydGljdWxhdGUgXG4gIHRoZSBkZXNpZ27igJlzIHVuZGVybHlpbmcgY29udGVudCBzdHJ1Y3R1cmUuXG5cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qXG4qICAgPG1haW4gY2xhc3M9XCJ0LW1haW5cIj5cbiogICAgIDxoMSBjbGFzcz1cImEtbWFpbi1oZWFkZXJcIj5IZWFkZXI8L2gxPlxuKiAgICAgPGRpdiBjbGFzcz1cIm8tcnRlLWJsb2NrXCI+XG4qICAgICAgIDxwIGNsYXNzPVwiYS1wYXJhZ3JhcGg+VGhpcyBpcyBhIHBhcmFncmFwaDwvcD5cbiogICAgICAgPHAgY2xhc3M9XCJhLXBhcmFncmFwaD5UaGlzIGlzIGFub3RoZXIgcGFyYWdyYXBoPC9wPlxuKiAgICAgPC9kaXY+XG4qICAgPC9tYWluPlxuKiAgIFxuKiAgIC50LW1haW4ge1xuKiAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuKiAgIH0gIFxuKi8iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4gIFBhZ2VzIGFyZSBzcGVjaWZjIGluc3RhbmNlcyBvZiB0ZW1wbGF0ZXMgXG4gIHRoYXQgc2hvdyB3aGF0IGEgVUkgbG9va3MgbGlrZSB3aXRoIHJlYWwgXG4gIHJlcHJlc2VudGF0aXZlIGNvbnRlbnQgaW4gcGxhY2UuXG5cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qXG4qICAgPG1haW4gY2xhc3M9XCJ0LW1haW4gcC1tYWluXCI+XG4qICAgICA8aDEgY2xhc3M9XCJhLW1haW4taGVhZGVyXCI+SGVhZGVyPC9oMT5cbiogICAgIDxkaXYgY2xhc3M9XCJvLXJ0ZS1ibG9ja1wiPlxuKiAgICAgICA8cCBjbGFzcz1cImEtcGFyYWdyYXBoPlRoaXMgaXMgYSBwYXJhZ3JhcGg8L3A+XG4qICAgICAgIDxwIGNsYXNzPVwiYS1wYXJhZ3JhcGg+VGhpcyBpcyBhbm90aGVyIHBhcmFncmFwaDwvcD5cbiogICAgIDwvZGl2PlxuKiAgIDwvbWFpbj5cbiogICBcbiogICAucC1tYWluIHtcbiogICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4qICAgfSAgXG4qLyIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiAgVXRpbHMgYXJlIGhlbHBlciBjbGFzc2VzIHRoYXQgZGVmaW5lcyBhXG4gIHNwZWNpZmljIGJlaGF2aW9yLlxuICBVdGlscyBjYW4gYmUgdXNlZCBpbiBhdG9tcywgbW9sZWN1bGVzLCBvcmdhbmlzbXMsXG4gIHRlbXBsYXRlICYgcGFnZXNcblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuXG4vKlxuKiAgIEVYQU1QTEVcbiogXG4qICA8ZGl2IGNsYXNzPVwiby1jdGEtYmxvY2sgdS1ncmlkIHUtZ3JpZC0tY2VudGVyXCI+XG4qICAgPGgxIGNsYXNzPVwiYS1tYWluLWhlYWRlclwiPkhlYWRlcjwvaDE+XG4qICAgPHAgY2xhc3M9XCJhLXBhcmFncmFwaC1sZWFkXCI+TGVhZCBUZXh0PC9wPlxuKiAgIDxidXR0b24gY2xhc3M9XCJtLWJ1dHRvblwiPlxuKiAgICAgPHAgY2xhc3M9XCJhLXBhcmFncmFwaC1idXR0b25cIj5CdXR0b24gdGV4dDwvcD5cbiogICA8L2J1dHRvbj5cbiogIDwvZGl2PlxuKlxuKiAudS1ncmlkIHtcbiogICBkaXNwbGF5OiBmbGV4O1xuKlxuKiAgICYtLWNlbnRlciB7XG4qICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiogICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4qICAgfVxuKiB9XG4qL1xuXG5AaW1wb3J0ICdhdG9taWMnO1xuIiwiXG4uYXRvbWljLWJsb2NrIHtcbiAgYm9yZGVyOjFweCBzb2xpZCBibGFjazsgXG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLmF0b21pYy1ibG9jayBoMSB7XG4gIHBhZGRpbmc6IC41ZW0gMDtcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBS0FBLEFBQUEsQ0FBQyxDQUFDO0VBQ0UsTUFBTSxFQUFFLENBQUM7RUFDVCxPQUFPLEVBQUUsQ0FBQztFQUNWLFVBQVUsRUFBRSxVQUFVLEdBQ3pCOztBQ0pEOzs7Ozs7Ozs7Ozs7bURBWW1EO0FDWm5EOzs7Ozs7MENBTTBDO0FBRTFDOzs7Ozs7RUFNRTtBQ1pGLEFBQUEsU0FBUyxDQUFDO0VBQ1IsTUFBTSxFQUFFLEdBQUc7RUFDWCxLQUFLLEVBQUUsR0FBRztFQUNWLE1BQU0sRUFBRSxJQUFJO0VBQ1osYUFBYSxFQUFFLE1BQU07RUFDckIsTUFBTSxFQUFFLElBQUk7RUFHWixVQUFVLEVBQUUsTUFBTTtFQUVsQixPQUFPLEVBQUUsSUFBSTtFQUNiLE1BQU0sRUFBRSxPQUFPO0VBR2YsVUFBVSxFQUFFLDZCQUE2QixHQUMxQzs7QUNoQkQsQUFBQSxRQUFRLENBQUM7RUFDUCxNQUFNLEVBQUUsQ0FBQztFQUNULE9BQU8sRUFBRSxHQUFHO0VBRVosYUFBYSxFQUFFLElBQUk7RUFDbkIsTUFBTSxFQUFFLGVBQWU7RUFDdkIsT0FBTyxFQUFFLElBQUksR0FDZDs7QUNSRDs7Ozs7a0RBS2tEO0FBR2xEOzs7Ozs7Ozs7RUFTRTtBQ2pCRjs7Ozs7O21EQU1tRDtBQUduRDs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQ3pCRjs7Ozs7O2tEQU1rRDtBQUVsRDs7Ozs7Ozs7Ozs7O0VBWUU7QUNwQkY7Ozs7OztrREFNa0Q7QUFFbEQ7Ozs7Ozs7Ozs7OztFQVlFO0FDcEJGOzs7Ozs7O2tEQU9rRDtBQUdsRDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQW1CRTtBQzVCRixBQUFBLGFBQWEsQ0FBQztFQUNaLE1BQU0sRUFBQyxlQUFlO0VBQ3RCLE9BQU8sRUFBRSxHQUFHLEdBQ2I7O0FBRUQsQUFBQSxhQUFhLENBQUMsRUFBRSxDQUFDO0VBQ2YsT0FBTyxFQUFFLE1BQU0sR0FDaEIifQ== */
