@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

body {
  font-size: 10px; }

/*
100    Extra Light or Ultra Light
200    Light or Thin
300    Book or Demi
400    Normal or Regular
500    Medium
600    Semibold, Demibold
700    Bold
800    Black, Extra Bold or Heavy
900    Extra Black, Fat, Poster or Ultra Black
*/
/* FONT SIZED SHOULD BE CHANGED TO CORRECT ONES */
/* Mixins for headings */
/*************************************************

  Elements.scss is used to define
  standard behavior without classes.
  
  Eg. 

  input[type=number]::-webkit-inner-spin-button, 
  input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none; 
  }

**************************************************/
a {
  font-size: 1.6em;
  border: none;
  text-decoration: none; }

h1 {
  font-family: Avenir-black;
  font-size: 7em;
  line-height: 6.6em; }

h2 {
  font-family: Avenir-black;
  font-size: 2.4em; }

h3 {
  font-family: Avenir-medium;
  font-size: 1.6em; }

button {
  font-family: Avenir-Heavy;
  font-size: 1.8em; }

input {
  font-family: ""; }

/****************************************

  Atoms of our interfaces serve as 
  the foundational building blocks that
  comprise all our user interfaces.

*****************************************/
/*
*   <a class="a-link">A link</a>
*
*   .a-link {
*     text-decoration: none;
*   }
*/
/* Needs to have a modifier to work properly */
.a-button {
  border: none;
  -webkit-box-shadow: 0 2px 14px 0 rgba(0, 0, 0, 0.2);
          box-shadow: 0 2px 14px 0 rgba(0, 0, 0, 0.2);
  margin: auto;
  outline: none;
  cursor: pointer; }
  .a-button--primary {
    background: #ffb400; }
  .a-button--secondary {
    background: #ffffff; }
  .a-button--transparent {
    background: rgba(0, 0, 0, 0.25); }
  .a-button--disabled {
    opacity: .3; }
  .a-button--circle-sm {
    border-radius: 1000px;
    width: 30px;
    height: 30px; }
  .a-button--circle-md {
    border-radius: 1000px;
    width: 40px;
    height: 40px; }
  .a-button--circle-lg {
    border-radius: 1000px;
    width: 79px;
    height: 79px; }
  .a-button--elipse {
    border-radius: 23.5px;
    padding: 15px 20px; }

.a-input {
  margin: 0;
  padding: 1em;
  outline: none;
  border: transparent; }
  .a-input--top-right, .a-input--top {
    border-top-right-radius: 50px; }
  .a-input--top-left, .a-input--top {
    border-top-left-radius: 50px; }
  .a-input--bottom-right, .a-input--bottom {
    border-bottom-right-radius: 50px; }
  .a-input--bottom-left, .a-input--bottom {
    border-bottom-left-radius: 50px; }

.a-link {
  color: #ffffff;
  padding: 5px; }
  .a-link--nav {
    font-family: Avenir-Heavy;
    border-bottom-color: #ffffff;
    padding: 10px; }
  .a-link--content {
    font-family: Avenir-medium;
    border-bottom-color: #ffb400;
    opacity: .6; }
  .a-link--active {
    border-bottom-width: 3px;
    border-bottom-style: solid;
    opacity: 1; }

/*************************************************

  Molecules are relatively simple groups of UI
  elements functioning together as a unit.

*************************************************/
/*  EXAMPLE:
*   
*   <button class="m-button">
*     <p class="a-paragraph-button">Button text</p>
*   </button>
*
*   .m-button {  
*     padding: 1em;     
*   }
*/
/*************************************************

  Organisms are relatively complex UI components 
  composed of groups of molecules and/or 
  atoms and/or other organisms.

**************************************************/
/*
*   EXAMPLE
*
*   <div class="o-cta-block">
*      <h1 class="a-main-header">Header</h1>
*      <p class="a-paragraph-lead">Lead Text</p>
*      <button class="m-button">
*         <p class="a-paragraph-button">Button text</p>  
*      </button>
*   </div>
*
*   .o-cta-block {
*     display: flex;
*     justify-content: center;
*     background: blue;
*   }  
*/
/*************************************************

  Templates are page-level objects that place 
  components into a layout and articulate 
  the designâ€™s underlying content structure.

*************************************************/
/*
*   <main class="t-main">
*     <h1 class="a-main-header">Header</h1>
*     <div class="o-rte-block">
*       <p class="a-paragraph>This is a paragraph</p>
*       <p class="a-paragraph>This is another paragraph</p>
*     </div>
*   </main>
*   
*   .t-main {
*     text-align: center;
*   }  
*/
/*************************************************

  Pages are specifc instances of templates 
  that show what a UI looks like with real 
  representative content in place.

*************************************************/
/*
*   <main class="t-main p-main">
*     <h1 class="a-main-header">Header</h1>
*     <div class="o-rte-block">
*       <p class="a-paragraph>This is a paragraph</p>
*       <p class="a-paragraph>This is another paragraph</p>
*     </div>
*   </main>
*   
*   .p-main {
*     background-color: blue;
*   }  
*/
/*************************************************

  Utils are helper classes that defines a
  specific behavior.
  Utils can be used in atoms, molecules, organisms,
  template & pages

*************************************************/
/*
*   EXAMPLE
* 
*  <div class="o-cta-block u-grid u-grid--center">
*   <h1 class="a-main-header">Header</h1>
*   <p class="a-paragraph-lead">Lead Text</p>
*   <button class="m-button">
*     <p class="a-paragraph-button">Button text</p>
*   </button>
*  </div>
*
* .u-grid {
*   display: flex;
*
*   &--center {
*     justify-content: center;
*     align-items: center;
*   }
* }
*/
.util-nav {
  padding: 1em;
  border-bottom: 1px solid white; }
  .util-nav__inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row; }
    .util-nav__inner > li {
      list-style: none;
      border-bottom: 2px solid transparent; }
      .util-nav__inner > li:hover {
        border-bottom-color: white; }

.util-btn-top {
  position: fixed;
  bottom: 1em;
  right: 1em; }

.util-block {
  border: 1px solid black;
  padding: 1em; }

.util-header {
  font-size: 3em;
  line-height: 2em;
  margin-top: 2em; }

.util-block__header {
  padding: .5em 0;
  font-size: 2em; }

.util-background {
  background: rgba(0, 121, 186, 0.62); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
